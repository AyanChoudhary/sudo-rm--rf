{
  "contractName": "ResultHelper",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_constituencyId",
          "type": "uint256"
        },
        {
          "name": "_adminId",
          "type": "uint256"
        }
      ],
      "name": "assignCandidateToConstituency",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_adminId",
          "type": "uint256"
        }
      ],
      "name": "getConstituencies",
      "outputs": [
        {
          "components": [
            {
              "name": "_id",
              "type": "uint256"
            },
            {
              "name": "_startTime",
              "type": "uint256"
            },
            {
              "name": "_duration",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "candidates",
      "outputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_adminId",
          "type": "uint256"
        }
      ],
      "name": "registerConstituency",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "uint256"
        },
        {
          "name": "to",
          "type": "uint256"
        },
        {
          "name": "tokenId",
          "type": "bytes32"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_adminId",
          "type": "uint256"
        }
      ],
      "name": "registerCandidate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "constituencies",
      "outputs": [
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "registerAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "generateElectionforConstituency",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_constituencyId",
          "type": "uint256"
        },
        {
          "name": "_hasVoted",
          "type": "bool"
        },
        {
          "components": [
            {
              "name": "_voteId",
              "type": "bytes32"
            },
            {
              "name": "_votedId",
              "type": "uint256"
            },
            {
              "name": "_voteTime",
              "type": "uint64"
            }
          ],
          "name": "_vote",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_constituencyId",
          "type": "uint256"
        }
      ],
      "name": "getCandidatesByConstituency",
      "outputs": [
        {
          "components": [
            {
              "name": "_id",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "bytes32"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_voterId",
          "type": "uint256"
        }
      ],
      "name": "VoterCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "CandidateRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "ConstituencyRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_constituencyId",
          "type": "uint256"
        }
      ],
      "name": "retreiveConstituencyVoteCount",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_constituencyId\",\"type\":\"uint256\"},{\"name\":\"_adminId\",\"type\":\"uint256\"}],\"name\":\"assignCandidateToConstituency\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"admins\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_adminId\",\"type\":\"uint256\"}],\"name\":\"getConstituencies\",\"outputs\":[{\"components\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_startTime\",\"type\":\"uint256\"},{\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidates\",\"outputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_adminId\",\"type\":\"uint256\"}],\"name\":\"registerConstituency\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"uint256\"},{\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_adminId\",\"type\":\"uint256\"}],\"name\":\"registerCandidate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"constituencies\",\"outputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_startTime\",\"type\":\"uint256\"},{\"name\":\"_duration\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"registerAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_constituencyId\",\"type\":\"uint256\"}],\"name\":\"retreiveConstituencyVoteCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"generateElectionforConstituency\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voters\",\"outputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_constituencyId\",\"type\":\"uint256\"},{\"name\":\"_hasVoted\",\"type\":\"bool\"},{\"components\":[{\"name\":\"_voteId\",\"type\":\"bytes32\"},{\"name\":\"_votedId\",\"type\":\"uint256\"},{\"name\":\"_voteTime\",\"type\":\"uint64\"}],\"name\":\"_vote\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_constituencyId\",\"type\":\"uint256\"}],\"name\":\"getCandidatesByConstituency\",\"outputs\":[{\"components\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"bytes32\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_voterId\",\"type\":\"uint256\"}],\"name\":\"VoterCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"CandidateRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"ConstituencyRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/d3mon/Projects/sudo-rm--rf/contracts/ResultHelper.sol\":\"ResultHelper\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/d3mon/Projects/sudo-rm--rf/contracts/Election.sol\":{\"keccak256\":\"0xdfa83bd8c5e5f4095d0ac913b52cc482e9af540b8a7e9f16ba87599f545b20d0\",\"urls\":[\"bzzr://eb2a38aa5d9eb5794f4dfc9f5ae6e32def6e046227afe08eeb5199c1b258758e\"]},\"/home/d3mon/Projects/sudo-rm--rf/contracts/ElectionHelper.sol\":{\"keccak256\":\"0xeaa5966dceaa08e93a771b87ea456953b917bf6a1f4c07bd42d18d1f12b438ed\",\"urls\":[\"bzzr://1fee227ee54dd7cb8ea66a9754086be48d62879293d6e9cf739643f5cdcc344d\"]},\"/home/d3mon/Projects/sudo-rm--rf/contracts/Ownable.sol\":{\"keccak256\":\"0x2ab62da16712d0930afc481a1eee28f87266018c7483cbe6890b9965933da8cd\",\"urls\":[\"bzzr://1b86f00c31642f363fa43d470c163b1ffd1fe1ad340d080544cc4f3ae2b736ec\"]},\"/home/d3mon/Projects/sudo-rm--rf/contracts/ResultHelper.sol\":{\"keccak256\":\"0x5cb2950b7c5bab3071069d9dbe88b9bc1824d4533eda834cbff733b9522cc1a6\",\"urls\":[\"bzzr://79ca0b7b1e7ef0c1b607f30ff5c780ad504d1dc65827dee55b5574a14911109b\"]},\"/home/d3mon/Projects/sudo-rm--rf/contracts/VotingTransactions.sol\":{\"keccak256\":\"0x293b48bf970cf64aa8e8e63f25d8492cf0ab75e41a0adae2b8adf533262537cd\",\"urls\":[\"bzzr://963fa48869e3fb2c83cde44910008ce560d438a3eeb662d23b1fca5642876ab1\"]}},\"version\":1}",
  "bytecode": "0x608060405260405180606001604052806000801b815260200160008152602001600067ffffffffffffffff168152506001600082015181600001556020820151816001015560408201518160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3611492806101406000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063c1c5c5d811610071578063c1c5c5d8146102a4578063d59d48d4146102d4578063da58c7d9146102f0578063f2fde38b14610323578063f9ed80671461033f5761010b565b80638da5cb5b1461021a5780638f32d59b146102385780639209416a1461025657806394845254146102885761010b565b80633acab52f116100de5780633acab52f146101bc5780633ba8b3ff146101d85780635d6e5052146101f4578063715018a6146102105761010b565b806312d51c721461011057806314bfd6d01461012c578063289752101461015c5780633477ee2e1461018c575b600080fd5b61012a60048036036101259190810190610fc1565b61036f565b005b61014660048036036101419190810190610f0d565b6103fc565b604051610153919061127f565b60405180910390f35b61017660048036036101719190810190610f0d565b61041d565b6040516101839190611242565b60405180910390f35b6101a660048036036101a19190810190610f0d565b6104e9565b6040516101b3919061127f565b60405180910390f35b6101d660048036036101d19190810190610f36565b610510565b005b6101f260048036036101ed9190810190610f72565b610659565b005b61020e60048036036102099190810190610f36565b6107c8565b005b6102186108d3565b005b6102226109a3565b60405161022f9190611205565b60405180910390f35b6102406109cc565b60405161024d9190611264565b60405180910390f35b610270600480360361026b9190810190610f0d565b610a23565b60405161027f939291906112df565b60405180910390f35b6102a2600480360361029d9190810190610f0d565b610a5a565b005b6102be60048036036102b99190810190610f0d565b610a9a565b6040516102cb9190611316565b60405180910390f35b6102ee60048036036102e99190810190610f36565b610b01565b005b61030a60048036036103059190810190610f0d565b610b60565b60405161031a949392919061129a565b60405180910390f35b61033d60048036036103389190810190610ee4565b610bfa565b005b61035960048036036103549190810190610f0d565b610c17565b6040516103669190611220565b60405180910390f35b8060008090505b600e805490508110156103f55781600e828154811061039157fe5b906000526020600020015414156103e25783600860008781526020019081526020016000208190555060096000858152602001908152602001600020600081548092919060010191905055506103e7565b6103e8565b5b8080600101915050610376565b5050505050565b600e818154811061040957fe5b906000526020600020016000915090505481565b60608160008090505b600e805490508110156104e25781600e828154811061044157fe5b906000526020600020015414156104cf57600d805480602002602001604051908101604052809291908181526020016000905b828210156104c45783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610474565b5050505092506104d4565b6104d5565b5b8080600101915050610426565b5050919050565b600c81815481106104f657fe5b906000526020600020016000915090508060000154905081565b8060008090505b600e805490508110156106535781600e828154811061053257fe5b906000526020600020015414156106405760006001600d6040518060600160405280888152602001600081526020016000815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000015560208201518160010155604082015181600201555050039050600d81815481106105c157fe5b9060005260206000209060030201600660008781526020019081526020016000206000820154816000015560018201548160010155600282015481600201559050507f21db1a92fb8efb483c22a581ee7e282b6d79d9d43b559ee1affa34181886796985604051610632919061127f565b60405180910390a150610645565b610646565b5b8080600101915050610517565b50505050565b600860008381526020019081526020016000205460046000858152602001908152602001600020600101541461068e57600080fd5b610696610e13565b6004600085815260200190815260200160002060405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff161515151581526020016003820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505081525050905060018160400190151590811515815250508260076000836060015160000151815260200190815260200160002081905550600a6000848152602001908152602001600020600081548092919060010191905055508183857f612c500cbd8f1ed8a4643cbf6b41fda92203645d7e4f7c3a237a1be69565ea2c60405160405180910390a450505050565b8060008090505b600e805490508110156108cd5781600e82815481106107ea57fe5b906000526020600020015414156108ba5760006001600c604051806020016040528088815250908060018154018082558091505090600182039060005260206000200160009091929091909150600082015181600001555050039050600c818154811061085357fe5b9060005260206000200160056000878152602001908152602001600020600082015481600001559050507f43dcee486fabffa2fb551555bfaa5bfcf6a42f2d014032ccef94bf09d83855eb856040516108ac919061127f565b60405180910390a1506108bf565b6108c0565b5b80806001019150506107cf565b50505050565b6108db6109cc565b6108e457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600d8181548110610a3057fe5b90600052602060002090600302016000915090508060000154908060010154908060020154905083565b610a626109cc565b610a6b57600080fd5b600e81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60006060610aa783610c17565b9050600080600090505b8251811015610af657600a6000848381518110610aca57fe5b602002602001015160000151815260200190815260200160002054820191508080600101915050610ab1565b508092505050919050565b610b09610e43565b60066000848152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201548152505090504281602001818152505081816040018181525050505050565b600b8181548110610b6d57fe5b90600052602060002090600602016000915090508060000154908060010154908060020160009054906101000a900460ff16908060030160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905084565b610c026109cc565b610c0b57600080fd5b610c1481610d1b565b50565b6060806009600084815260200190815260200160002054604051908082528060200260200182016040528015610c6757816020015b610c54610e64565b815260200190600190039081610c4c5790505b509050600080905060008090505b600c80549050811015610d10578460086000600c8481548110610c9457fe5b90600052602060002001600001548152602001908152602001600020541415610d0357600c8181548110610cc457fe5b90600052602060002001604051806020016040529081600082015481525050838381518110610cef57fe5b602002602001018190525081806001019250505b8080600101915050610c75565b508192505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d5557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060c001604052806000815260200160008152602001600015158152602001610e3d610e77565b81525090565b60405180606001604052806000815260200160008152602001600081525090565b6040518060200160405280600081525090565b60405180606001604052806000801916815260200160008152602001600067ffffffffffffffff1681525090565b600081359050610eb481611413565b92915050565b600081359050610ec98161142a565b92915050565b600081359050610ede81611441565b92915050565b600060208284031215610ef657600080fd5b6000610f0484828501610ea5565b91505092915050565b600060208284031215610f1f57600080fd5b6000610f2d84828501610ecf565b91505092915050565b60008060408385031215610f4957600080fd5b6000610f5785828601610ecf565b9250506020610f6885828601610ecf565b9150509250929050565b600080600060608486031215610f8757600080fd5b6000610f9586828701610ecf565b9350506020610fa686828701610ecf565b9250506040610fb786828701610eba565b9150509250925092565b600080600060608486031215610fd657600080fd5b6000610fe486828701610ecf565b9350506020610ff586828701610ecf565b925050604061100686828701610ecf565b9150509250925092565b600061101c8383611129565b60208301905092915050565b60006110348383611145565b60608301905092915050565b6110498161139d565b82525050565b600061105a8261134b565b611064818561137b565b935061106f83611331565b8060005b838110156110a05781516110878882611010565b975061109283611361565b925050600181019050611073565b5085935050505092915050565b60006110b882611356565b6110c2818561138c565b93506110cd8361133e565b8060005b838110156110fe5781516110e58882611028565b97506110f08361136e565b9250506001810190506110d1565b5085935050505092915050565b611114816113af565b82525050565b611123816113bb565b82525050565b60208201600082015161113f60008501826111c9565b50505050565b60608201600082015161115b60008501826111c9565b50602082015161116e60208501826111c9565b50604082015161118160408501826111c9565b50505050565b60608201600082015161119d600085018261111a565b5060208201516111b060208501826111c9565b5060408201516111c360408501826111f6565b50505050565b6111d2816113e5565b82525050565b6111e1816113e5565b82525050565b6111f0816113ef565b82525050565b6111ff816113ff565b82525050565b600060208201905061121a6000830184611040565b92915050565b6000602082019050818103600083015261123a818461104f565b905092915050565b6000602082019050818103600083015261125c81846110ad565b905092915050565b6000602082019050611279600083018461110b565b92915050565b600060208201905061129460008301846111d8565b92915050565b600060c0820190506112af60008301876111d8565b6112bc60208301866111d8565b6112c9604083018561110b565b6112d66060830184611187565b95945050505050565b60006060820190506112f460008301866111d8565b61130160208301856111d8565b61130e60408301846111d8565b949350505050565b600060208201905061132b60008301846111e7565b92915050565b6000602082019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113a8826113c5565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b61141c8161139d565b811461142757600080fd5b50565b611433816113bb565b811461143e57600080fd5b50565b61144a816113e5565b811461145557600080fd5b5056fea265627a7a72305820800622b6f3a9d2c9e8233adf863dbdb8fd798edc3c64caf1f37a33f238e55cb66c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063c1c5c5d811610071578063c1c5c5d8146102a4578063d59d48d4146102d4578063da58c7d9146102f0578063f2fde38b14610323578063f9ed80671461033f5761010b565b80638da5cb5b1461021a5780638f32d59b146102385780639209416a1461025657806394845254146102885761010b565b80633acab52f116100de5780633acab52f146101bc5780633ba8b3ff146101d85780635d6e5052146101f4578063715018a6146102105761010b565b806312d51c721461011057806314bfd6d01461012c578063289752101461015c5780633477ee2e1461018c575b600080fd5b61012a60048036036101259190810190610fc1565b61036f565b005b61014660048036036101419190810190610f0d565b6103fc565b604051610153919061127f565b60405180910390f35b61017660048036036101719190810190610f0d565b61041d565b6040516101839190611242565b60405180910390f35b6101a660048036036101a19190810190610f0d565b6104e9565b6040516101b3919061127f565b60405180910390f35b6101d660048036036101d19190810190610f36565b610510565b005b6101f260048036036101ed9190810190610f72565b610659565b005b61020e60048036036102099190810190610f36565b6107c8565b005b6102186108d3565b005b6102226109a3565b60405161022f9190611205565b60405180910390f35b6102406109cc565b60405161024d9190611264565b60405180910390f35b610270600480360361026b9190810190610f0d565b610a23565b60405161027f939291906112df565b60405180910390f35b6102a2600480360361029d9190810190610f0d565b610a5a565b005b6102be60048036036102b99190810190610f0d565b610a9a565b6040516102cb9190611316565b60405180910390f35b6102ee60048036036102e99190810190610f36565b610b01565b005b61030a60048036036103059190810190610f0d565b610b60565b60405161031a949392919061129a565b60405180910390f35b61033d60048036036103389190810190610ee4565b610bfa565b005b61035960048036036103549190810190610f0d565b610c17565b6040516103669190611220565b60405180910390f35b8060008090505b600e805490508110156103f55781600e828154811061039157fe5b906000526020600020015414156103e25783600860008781526020019081526020016000208190555060096000858152602001908152602001600020600081548092919060010191905055506103e7565b6103e8565b5b8080600101915050610376565b5050505050565b600e818154811061040957fe5b906000526020600020016000915090505481565b60608160008090505b600e805490508110156104e25781600e828154811061044157fe5b906000526020600020015414156104cf57600d805480602002602001604051908101604052809291908181526020016000905b828210156104c45783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610474565b5050505092506104d4565b6104d5565b5b8080600101915050610426565b5050919050565b600c81815481106104f657fe5b906000526020600020016000915090508060000154905081565b8060008090505b600e805490508110156106535781600e828154811061053257fe5b906000526020600020015414156106405760006001600d6040518060600160405280888152602001600081526020016000815250908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000015560208201518160010155604082015181600201555050039050600d81815481106105c157fe5b9060005260206000209060030201600660008781526020019081526020016000206000820154816000015560018201548160010155600282015481600201559050507f21db1a92fb8efb483c22a581ee7e282b6d79d9d43b559ee1affa34181886796985604051610632919061127f565b60405180910390a150610645565b610646565b5b8080600101915050610517565b50505050565b600860008381526020019081526020016000205460046000858152602001908152602001600020600101541461068e57600080fd5b610696610e13565b6004600085815260200190815260200160002060405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff161515151581526020016003820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505081525050905060018160400190151590811515815250508260076000836060015160000151815260200190815260200160002081905550600a6000848152602001908152602001600020600081548092919060010191905055508183857f612c500cbd8f1ed8a4643cbf6b41fda92203645d7e4f7c3a237a1be69565ea2c60405160405180910390a450505050565b8060008090505b600e805490508110156108cd5781600e82815481106107ea57fe5b906000526020600020015414156108ba5760006001600c604051806020016040528088815250908060018154018082558091505090600182039060005260206000200160009091929091909150600082015181600001555050039050600c818154811061085357fe5b9060005260206000200160056000878152602001908152602001600020600082015481600001559050507f43dcee486fabffa2fb551555bfaa5bfcf6a42f2d014032ccef94bf09d83855eb856040516108ac919061127f565b60405180910390a1506108bf565b6108c0565b5b80806001019150506107cf565b50505050565b6108db6109cc565b6108e457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600d8181548110610a3057fe5b90600052602060002090600302016000915090508060000154908060010154908060020154905083565b610a626109cc565b610a6b57600080fd5b600e81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60006060610aa783610c17565b9050600080600090505b8251811015610af657600a6000848381518110610aca57fe5b602002602001015160000151815260200190815260200160002054820191508080600101915050610ab1565b508092505050919050565b610b09610e43565b60066000848152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201548152505090504281602001818152505081816040018181525050505050565b600b8181548110610b6d57fe5b90600052602060002090600602016000915090508060000154908060010154908060020160009054906101000a900460ff16908060030160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905084565b610c026109cc565b610c0b57600080fd5b610c1481610d1b565b50565b6060806009600084815260200190815260200160002054604051908082528060200260200182016040528015610c6757816020015b610c54610e64565b815260200190600190039081610c4c5790505b509050600080905060008090505b600c80549050811015610d10578460086000600c8481548110610c9457fe5b90600052602060002001600001548152602001908152602001600020541415610d0357600c8181548110610cc457fe5b90600052602060002001604051806020016040529081600082015481525050838381518110610cef57fe5b602002602001018190525081806001019250505b8080600101915050610c75565b508192505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d5557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060c001604052806000815260200160008152602001600015158152602001610e3d610e77565b81525090565b60405180606001604052806000815260200160008152602001600081525090565b6040518060200160405280600081525090565b60405180606001604052806000801916815260200160008152602001600067ffffffffffffffff1681525090565b600081359050610eb481611413565b92915050565b600081359050610ec98161142a565b92915050565b600081359050610ede81611441565b92915050565b600060208284031215610ef657600080fd5b6000610f0484828501610ea5565b91505092915050565b600060208284031215610f1f57600080fd5b6000610f2d84828501610ecf565b91505092915050565b60008060408385031215610f4957600080fd5b6000610f5785828601610ecf565b9250506020610f6885828601610ecf565b9150509250929050565b600080600060608486031215610f8757600080fd5b6000610f9586828701610ecf565b9350506020610fa686828701610ecf565b9250506040610fb786828701610eba565b9150509250925092565b600080600060608486031215610fd657600080fd5b6000610fe486828701610ecf565b9350506020610ff586828701610ecf565b925050604061100686828701610ecf565b9150509250925092565b600061101c8383611129565b60208301905092915050565b60006110348383611145565b60608301905092915050565b6110498161139d565b82525050565b600061105a8261134b565b611064818561137b565b935061106f83611331565b8060005b838110156110a05781516110878882611010565b975061109283611361565b925050600181019050611073565b5085935050505092915050565b60006110b882611356565b6110c2818561138c565b93506110cd8361133e565b8060005b838110156110fe5781516110e58882611028565b97506110f08361136e565b9250506001810190506110d1565b5085935050505092915050565b611114816113af565b82525050565b611123816113bb565b82525050565b60208201600082015161113f60008501826111c9565b50505050565b60608201600082015161115b60008501826111c9565b50602082015161116e60208501826111c9565b50604082015161118160408501826111c9565b50505050565b60608201600082015161119d600085018261111a565b5060208201516111b060208501826111c9565b5060408201516111c360408501826111f6565b50505050565b6111d2816113e5565b82525050565b6111e1816113e5565b82525050565b6111f0816113ef565b82525050565b6111ff816113ff565b82525050565b600060208201905061121a6000830184611040565b92915050565b6000602082019050818103600083015261123a818461104f565b905092915050565b6000602082019050818103600083015261125c81846110ad565b905092915050565b6000602082019050611279600083018461110b565b92915050565b600060208201905061129460008301846111d8565b92915050565b600060c0820190506112af60008301876111d8565b6112bc60208301866111d8565b6112c9604083018561110b565b6112d66060830184611187565b95945050505050565b60006060820190506112f460008301866111d8565b61130160208301856111d8565b61130e60408301846111d8565b949350505050565b600060208201905061132b60008301846111e7565b92915050565b6000602082019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113a8826113c5565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b61141c8161139d565b811461142757600080fd5b50565b611433816113bb565b811461143e57600080fd5b50565b61144a816113e5565b811461145557600080fd5b5056fea265627a7a72305820800622b6f3a9d2c9e8233adf863dbdb8fd798edc3c64caf1f37a33f238e55cb66c6578706572696d656e74616cf50037",
  "sourceMap": "95:431:5:-;;;607:13:1;;;;;;;;612:1;607:13;;;;;;615:1;607:13;;;;618:1;607:13;;;;;583:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;492:10:4;483:6;;:19;;;;;;;;;;;;;;;;;;546:6;;;;;;;;;;;513:40;;542:1;513:40;;;;;;;;;;;;95:431:5;;;;;;",
  "deployedSourceMap": "95:431:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;95:431:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:240:2;;;;;;;;;;;;;;;;:::i;:::-;;1136:23:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;127:143:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1063:29:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1894:245;;;;;;;;;;;;;;;;:::i;:::-;;477:365:6;;;;;;;;;;;;;;;;:::i;:::-;;1671:219:1;;;;;;;;;;;;;;;;:::i;:::-;;1247:127:4;;;:::i;:::-;;613:70;;;:::i;:::-;;;;;;;;;;;;;;;;900:83;;;:::i;:::-;;;;;;;;;;;;;;;;1096:36:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2143:82;;;;;;;;;;;;;;;;:::i;:::-;;145:379:5;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;276:253:2;;;;;;;;;;;;;;;;:::i;:::-;;1038:21:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1535:101:4;;;;;;;;;;;;;;;;:::i;:::-;;781:490:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;535:240;647:8;1291:6:1;1300:1;1291:10;;1287:136;1307:6;:13;;;;1303:1;:17;1287:136;;;1351:3;1338:6;1345:1;1338:9;;;;;;;;;;;;;;;;:16;1335:82;;;698:15:2;667:23;:28;691:3;667:28;;;;;;;;;;;:46;;;;723:26;:43;750:15;723:43;;;;;;;;;;;;:45;;;;;;;;;;;;;1335:82:1;;;1400:8;;1335:82;1287:136;1322:3;;;;;;;1287:136;;;;535:240:2;;;;:::o;1136:23:1:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;127:143:2:-;209:21;191:8;1291:6:1;1300:1;1291:10;;1287:136;1307:6;:13;;;;1303:1;:17;1287:136;;;1351:3;1338:6;1345:1;1338:9;;;;;;;;;;;;;;;;:16;1335:82;;;249:14:2;242:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1335:82:1;;;1400:8;;1335:82;1287:136;1322:3;;;;;;;1287:136;;;;127:143:2;;;;:::o;1063:29:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1894:245::-;1974:8;1291:6;1300:1;1291:10;;1287:136;1307:6;:13;;;;1303:1;:17;1287:136;;;1351:3;1338:6;1345:1;1338:9;;;;;;;;;;;;;;;;:16;1335:82;;;1990:7;2047:1;2000:14;2020:23;;;;;;;;2033:3;2020:23;;;;2038:1;2020:23;;;;2041:1;2020:23;;;2000:44;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2000:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:48;1990:58;;2078:14;2093:2;2078:18;;;;;;;;;;;;;;;;;;2054:16;:21;2071:3;2054:21;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;2107:27;2130:3;2107:27;;;;;;;;;;;;;;;1366:1;1335:82;;;1400:8;;1335:82;1287:136;1322:3;;;;;;;1287:136;;;;1894:245;;;:::o;477:365:6:-;602:23;:27;626:2;602:27;;;;;;;;;;;;567:9;:15;577:4;567:15;;;;;;;;;;;:31;;;:62;559:71;;;;;;640:18;;:::i;:::-;661:9;:15;671:4;661:15;;;;;;;;;;;640:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;704:4;686:5;:15;;:22;;;;;;;;;;;757:2;718:15;:36;734:5;:11;;;:19;;;718:36;;;;;;;;;;;:41;;;;769:18;:22;788:2;769:22;;;;;;;;;;;;:24;;;;;;;;;;;;;827:7;823:2;817:4;808:27;;;;;;;;;;477:365;;;;:::o;1671:219:1:-;1748:8;1291:6;1300:1;1291:10;;1287:136;1307:6;:13;;;;1303:1;:17;1287:136;;;1351:3;1338:6;1345:1;1338:9;;;;;;;;;;;;;;;;:16;1335:82;;;1764:7;1808:1;1774:10;1790:14;;;;;;;;1800:3;1790:14;;;1774:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1774:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:35;1764:45;;1836:10;1847:2;1836:14;;;;;;;;;;;;;;;1815:13;:18;1829:3;1815:18;;;;;;;;;;;:35;;;;;;;;;;;1861:24;1881:3;1861:24;;;;;;;;;;;;;;;1366:1;1335:82;;;1400:8;;1335:82;1287:136;1322:3;;;;;;;1287:136;;;;1671:219;;;:::o;1247:127:4:-;798:9;:7;:9::i;:::-;790:18;;;;;;1341:1;1304:40;;1325:6;;;;;;;;;;;1304:40;;;;;;;;;;;;1367:1;1350:6;;:19;;;;;;;;;;;;;;;;;;1247:127::o;613:70::-;650:7;672:6;;;;;;;;;;;665:13;;613:70;:::o;900:83::-;939:4;972:6;;;;;;;;;;;958:20;;:10;:20;;;951:27;;900:83;:::o;1096:36:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2143:82::-;798:9:4;:7;:9::i;:::-;790:18;;;;;;2204:6:1;2216:3;2204:16;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2204:16:1;;;;;;;;;;;;;;;;;;;;;;2143:82;:::o;145:379:5:-;231:6;249:30;282:44;310:15;282:27;:44::i;:::-;249:77;;336:13;364:6;373:1;364:10;;359:135;380:11;:18;376:1;:22;359:135;;;444:18;:38;463:11;475:1;463:14;;;;;;;;;;;;;;:18;;;444:38;;;;;;;;;;;;428:6;:55;419:64;;400:3;;;;;;;359:135;;;;511:6;504:13;;;;145:379;;;:::o;276:253:2:-;368:33;;:::i;:::-;404:16;:21;421:3;404:21;;;;;;;;;;;368:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:15;435:13;:24;;:42;;;;;513:9;487:13;:23;;:35;;;;;276:253;;;:::o;1038:21:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1535:101:4:-;798:9;:7;:9::i;:::-;790:18;;;;;;1603:28;1622:8;1603:18;:28::i;:::-;1535:101;:::o;781:490:2:-;863:18;893:30;942:26;:43;969:15;942:43;;;;;;;;;;;;926:60;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;893:93;;996:12;1011:1;996:16;;1026:6;1035:1;1026:10;;1022:214;1042:10;:17;;;;1038:1;:21;1022:214;;;1129:15;1083:23;:42;1107:10;1118:1;1107:13;;;;;;;;;;;;;;;:17;;;1083:42;;;;;;;;;;;;:61;1080:150;;;1183:10;1194:1;1183:13;;;;;;;;;;;;;;;1160:36;;;;;;;;;;;;;;;;;:11;1172:7;1160:20;;;;;;;;;;;;;:36;;;;1210:9;;;;;;;1080:150;1061:3;;;;;;;1022:214;;;;1253:11;1246:18;;;;781:490;;;:::o;1770:169:4:-;1859:1;1839:22;;:8;:22;;;;1831:31;;;;;;1902:8;1873:38;;1894:6;;;;;;;;;;;1873:38;;;;;;;;;;;;1926:8;1917:6;;:17;;;;;;;;;;;;;;;;;;1770:169;:::o;95:431:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:130;;222:6;209:20;200:29;;234:33;261:5;234:33;;;194:78;;;;;279:130;;359:6;346:20;337:29;;371:33;398:5;371:33;;;331:78;;;;;416:241;;520:2;508:9;499:7;495:23;491:32;488:2;;;536:1;533;526:12;488:2;571:1;588:53;633:7;624:6;613:9;609:22;588:53;;;578:63;;550:97;482:175;;;;;664:241;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;819:1;836:53;881:7;872:6;861:9;857:22;836:53;;;826:63;;798:97;730:175;;;;;912:366;;;1033:2;1021:9;1012:7;1008:23;1004:32;1001:2;;;1049:1;1046;1039:12;1001:2;1084:1;1101:53;1146:7;1137:6;1126:9;1122:22;1101:53;;;1091:63;;1063:97;1191:2;1209:53;1254:7;1245:6;1234:9;1230:22;1209:53;;;1199:63;;1170:98;995:283;;;;;;1285:491;;;;1423:2;1411:9;1402:7;1398:23;1394:32;1391:2;;;1439:1;1436;1429:12;1391:2;1474:1;1491:53;1536:7;1527:6;1516:9;1512:22;1491:53;;;1481:63;;1453:97;1581:2;1599:53;1644:7;1635:6;1624:9;1620:22;1599:53;;;1589:63;;1560:98;1689:2;1707:53;1752:7;1743:6;1732:9;1728:22;1707:53;;;1697:63;;1668:98;1385:391;;;;;;1783:491;;;;1921:2;1909:9;1900:7;1896:23;1892:32;1889:2;;;1937:1;1934;1927:12;1889:2;1972:1;1989:53;2034:7;2025:6;2014:9;2010:22;1989:53;;;1979:63;;1951:97;2079:2;2097:53;2142:7;2133:6;2122:9;2118:22;2097:53;;;2087:63;;2058:98;2187:2;2205:53;2250:7;2241:6;2230:9;2226:22;2205:53;;;2195:63;;2166:98;1883:391;;;;;;2282:261;;2411:92;2499:3;2491:6;2411:92;;;2532:4;2527:3;2523:14;2509:28;;2404:139;;;;;2552:273;;2687:98;2781:3;2773:6;2687:98;;;2814:4;2809:3;2805:14;2791:28;;2680:145;;;;;2833:113;2916:24;2934:5;2916:24;;;2911:3;2904:37;2898:48;;;3020:858;;3207:75;3276:5;3207:75;;;3295:107;3395:6;3390:3;3295:107;;;3288:114;;3423:77;3494:5;3423:77;;;3520:7;3548:1;3533:323;3558:6;3555:1;3552:13;3533:323;;;3625:6;3619:13;3646:105;3747:3;3732:13;3646:105;;;3639:112;;3768:81;3842:6;3768:81;;;3758:91;;3590:266;3580:1;3577;3573:9;3568:14;;3533:323;;;3537:14;3869:3;3862:10;;3186:692;;;;;;;;3959:882;;4152:78;4224:5;4152:78;;;4243:110;4346:6;4341:3;4243:110;;;4236:117;;4374:80;4448:5;4374:80;;;4474:7;4502:1;4487:332;4512:6;4509:1;4506:13;4487:332;;;4579:6;4573:13;4600:111;4707:3;4692:13;4600:111;;;4593:118;;4728:84;4805:6;4728:84;;;4718:94;;4544:275;4534:1;4531;4527:9;4522:14;;4487:332;;;4491:14;4832:3;4825:10;;4131:710;;;;;;;;4849:104;4926:21;4941:5;4926:21;;;4921:3;4914:34;4908:45;;;4960:103;5033:24;5051:5;5033:24;;;5028:3;5021:37;5015:48;;;5131:305;5260:4;5255:3;5251:14;5342:3;5335:5;5331:15;5325:22;5353:62;5410:3;5405;5401:13;5387:12;5353:62;;;5280:141;5233:203;;;;5510:630;5645:4;5640:3;5636:14;5727:3;5720:5;5716:15;5710:22;5738:62;5795:3;5790;5786:13;5772:12;5738:62;;;5665:141;5885:4;5878:5;5874:16;5868:23;5897:63;5954:4;5949:3;5945:14;5931:12;5897:63;;;5816:150;6044:4;6037:5;6033:16;6027:23;6056:63;6113:4;6108:3;6104:14;6090:12;6056:63;;;5976:149;5618:522;;;;6198:624;6327:4;6322:3;6318:14;6413:3;6406:5;6402:15;6396:22;6424:62;6481:3;6476;6472:13;6458:12;6424:62;;;6347:145;6569:4;6562:5;6558:16;6552:23;6581:63;6638:4;6633:3;6629:14;6615:12;6581:63;;;6502:148;6728:4;6721:5;6717:16;6711:23;6740:61;6795:4;6790:3;6786:14;6772:12;6740:61;;;6660:147;6300:522;;;;6829:103;6902:24;6920:5;6902:24;;;6897:3;6890:37;6884:48;;;6939:113;7022:24;7040:5;7022:24;;;7017:3;7010:37;7004:48;;;7059:110;7140:23;7157:5;7140:23;;;7135:3;7128:36;7122:47;;;7176:100;7247:23;7264:5;7247:23;;;7242:3;7235:36;7229:47;;;7283:213;;7401:2;7390:9;7386:18;7378:26;;7415:71;7483:1;7472:9;7468:17;7459:6;7415:71;;;7372:124;;;;;7503:445;;7713:2;7702:9;7698:18;7690:26;;7763:9;7757:4;7753:20;7749:1;7738:9;7734:17;7727:47;7788:150;7933:4;7924:6;7788:150;;;7780:158;;7684:264;;;;;7955:457;;8171:2;8160:9;8156:18;8148:26;;8221:9;8215:4;8211:20;8207:1;8196:9;8192:17;8185:47;8246:156;8397:4;8388:6;8246:156;;;8238:164;;8142:270;;;;;8419:201;;8531:2;8520:9;8516:18;8508:26;;8545:65;8607:1;8596:9;8592:17;8583:6;8545:65;;;8502:118;;;;;8627:213;;8745:2;8734:9;8730:18;8722:26;;8759:71;8827:1;8816:9;8812:17;8803:6;8759:71;;;8716:124;;;;;8847:607;;9079:3;9068:9;9064:19;9056:27;;9094:71;9162:1;9151:9;9147:17;9138:6;9094:71;;;9176:72;9244:2;9233:9;9229:18;9220:6;9176:72;;;9259:66;9321:2;9310:9;9306:18;9297:6;9259:66;;;9336:108;9440:2;9429:9;9425:18;9416:6;9336:108;;;9050:404;;;;;;;;9461:435;;9635:2;9624:9;9620:18;9612:26;;9649:71;9717:1;9706:9;9702:17;9693:6;9649:71;;;9731:72;9799:2;9788:9;9784:18;9775:6;9731:72;;;9814;9882:2;9871:9;9867:18;9858:6;9814:72;;;9606:290;;;;;;;9903:209;;10019:2;10008:9;10004:18;9996:26;;10033:69;10099:1;10088:9;10084:17;10075:6;10033:69;;;9990:122;;;;;10122:144;;10253:4;10245:6;10241:17;10230:28;;10221:45;;;;10279:147;;10413:4;10405:6;10401:17;10390:28;;10381:45;;;;10436:128;;10553:5;10547:12;10537:22;;10531:33;;;;10571:131;;10691:5;10685:12;10675:22;;10669:33;;;;10711:145;;10844:4;10836:6;10832:17;10821:28;;10813:43;;;;10867:148;;11003:4;10995:6;10991:17;10980:28;;10972:43;;;;11025:199;;11176:6;11171:3;11164:19;11213:4;11208:3;11204:14;11189:29;;11157:67;;;;;11233:202;;11387:6;11382:3;11375:19;11424:4;11419:3;11415:14;11400:29;;11368:67;;;;;11443:91;;11505:24;11523:5;11505:24;;;11494:35;;11488:46;;;;11541:85;;11614:5;11607:13;11600:21;11589:32;;11583:43;;;;11633:72;;11695:5;11684:16;;11678:27;;;;11712:121;;11785:42;11778:5;11774:54;11763:65;;11757:76;;;;11840:72;;11902:5;11891:16;;11885:27;;;;11919:88;;11991:10;11984:5;11980:22;11969:33;;11963:44;;;;12014:96;;12086:18;12079:5;12075:30;12064:41;;12058:52;;;;12117:117;12186:24;12204:5;12186:24;;;12179:5;12176:35;12166:2;;12225:1;12222;12215:12;12166:2;12160:74;;12241:117;12310:24;12328:5;12310:24;;;12303:5;12300:35;12290:2;;12349:1;12346;12339:12;12290:2;12284:74;;12365:117;12434:24;12452:5;12434:24;;;12427:5;12424:35;12414:2;;12473:1;12470;12463:12;12414:2;12408:74;",
  "source": "pragma solidity ^0.5.0;\npragma experimental ABIEncoderV2;\n\nimport \"./VotingTransactions.sol\";\n\ncontract ResultHelper is VotingTransactions{\n\n    function retreiveConstituencyVoteCount(uint256 _constituencyId) external view returns(uint32) {\n        Candidate[] memory _candidates = getCandidatesByConstituency(_constituencyId);\n        uint32 _votes;\n        for (uint i = 0; i < _candidates.length; i++) {\n            _votes = _votes + uint32(candidateVoteCount[_candidates[i]._id]);\n        }\n\n        return _votes;\n    }\n}",
  "sourcePath": "/home/d3mon/Projects/sudo-rm--rf/contracts/ResultHelper.sol",
  "ast": {
    "absolutePath": "/home/d3mon/Projects/sudo-rm--rf/contracts/ResultHelper.sol",
    "exportedSymbols": {
      "ResultHelper": [
        651
      ]
    },
    "id": 652,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 599,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "id": 600,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:5"
      },
      {
        "absolutePath": "/home/d3mon/Projects/sudo-rm--rf/contracts/VotingTransactions.sol",
        "file": "./VotingTransactions.sol",
        "id": 601,
        "nodeType": "ImportDirective",
        "scope": 652,
        "sourceUnit": 741,
        "src": "59:34:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 602,
              "name": "VotingTransactions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 740,
              "src": "120:18:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VotingTransactions_$740",
                "typeString": "contract VotingTransactions"
              }
            },
            "id": 603,
            "nodeType": "InheritanceSpecifier",
            "src": "120:18:5"
          }
        ],
        "contractDependencies": [
          299,
          432,
          597,
          740
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 651,
        "linearizedBaseContracts": [
          651,
          740,
          432,
          299,
          597
        ],
        "name": "ResultHelper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 649,
              "nodeType": "Block",
              "src": "239:285:5",
              "statements": [
                {
                  "assignments": [
                    613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 613,
                      "name": "_candidates",
                      "nodeType": "VariableDeclaration",
                      "scope": 649,
                      "src": "249:30:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Candidate_$82_memory_$dyn_memory_ptr",
                        "typeString": "struct Election.Candidate[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 611,
                          "name": "Candidate",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 82,
                          "src": "249:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Candidate_$82_storage_ptr",
                            "typeString": "struct Election.Candidate"
                          }
                        },
                        "id": 612,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "249:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$82_storage_$dyn_storage_ptr",
                          "typeString": "struct Election.Candidate[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 617,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 615,
                        "name": "_constituencyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "310:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 614,
                      "name": "getCandidatesByConstituency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 431,
                      "src": "282:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Candidate_$82_memory_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct Election.Candidate memory[] memory)"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "282:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$82_memory_$dyn_memory_ptr",
                      "typeString": "struct Election.Candidate memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "249:77:5"
                },
                {
                  "assignments": [
                    619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 619,
                      "name": "_votes",
                      "nodeType": "VariableDeclaration",
                      "scope": 649,
                      "src": "336:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 618,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "336:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 620,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "336:13:5"
                },
                {
                  "body": {
                    "id": 645,
                    "nodeType": "Block",
                    "src": "405:89:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 632,
                            "name": "_votes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "419:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 633,
                              "name": "_votes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "428:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 635,
                                    "name": "candidateVoteCount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 124,
                                    "src": "444:18:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 640,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 636,
                                        "name": "_candidates",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 613,
                                        "src": "463:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Candidate_$82_memory_$dyn_memory_ptr",
                                          "typeString": "struct Election.Candidate memory[] memory"
                                        }
                                      },
                                      "id": 638,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 637,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 622,
                                        "src": "475:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "463:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Candidate_$82_memory",
                                        "typeString": "struct Election.Candidate memory"
                                      }
                                    },
                                    "id": 639,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "_id",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 81,
                                    "src": "463:18:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "444:38:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "437:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": "uint32"
                              },
                              "id": 641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "437:46:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "428:55:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "419:64:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 644,
                        "nodeType": "ExpressionStatement",
                        "src": "419:64:5"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 625,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 622,
                      "src": "376:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 626,
                        "name": "_candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "380:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$82_memory_$dyn_memory_ptr",
                          "typeString": "struct Election.Candidate memory[] memory"
                        }
                      },
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "380:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "376:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 646,
                  "initializationExpression": {
                    "assignments": [
                      622
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 622,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "364:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "364:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 624,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "373:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "364:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "400:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 629,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "400:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 631,
                    "nodeType": "ExpressionStatement",
                    "src": "400:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "359:135:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 647,
                    "name": "_votes",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 619,
                    "src": "511:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 609,
                  "id": 648,
                  "nodeType": "Return",
                  "src": "504:13:5"
                }
              ]
            },
            "documentation": null,
            "id": 650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retreiveConstituencyVoteCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "name": "_constituencyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "184:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "184:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "183:25:5"
            },
            "returnParameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "231:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "231:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "230:8:5"
            },
            "scope": 651,
            "src": "145:379:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 652,
        "src": "95:431:5"
      }
    ],
    "src": "0:526:5"
  },
  "legacyAST": {
    "absolutePath": "/home/d3mon/Projects/sudo-rm--rf/contracts/ResultHelper.sol",
    "exportedSymbols": {
      "ResultHelper": [
        651
      ]
    },
    "id": 652,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 599,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "id": 600,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:5"
      },
      {
        "absolutePath": "/home/d3mon/Projects/sudo-rm--rf/contracts/VotingTransactions.sol",
        "file": "./VotingTransactions.sol",
        "id": 601,
        "nodeType": "ImportDirective",
        "scope": 652,
        "sourceUnit": 741,
        "src": "59:34:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 602,
              "name": "VotingTransactions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 740,
              "src": "120:18:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VotingTransactions_$740",
                "typeString": "contract VotingTransactions"
              }
            },
            "id": 603,
            "nodeType": "InheritanceSpecifier",
            "src": "120:18:5"
          }
        ],
        "contractDependencies": [
          299,
          432,
          597,
          740
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 651,
        "linearizedBaseContracts": [
          651,
          740,
          432,
          299,
          597
        ],
        "name": "ResultHelper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 649,
              "nodeType": "Block",
              "src": "239:285:5",
              "statements": [
                {
                  "assignments": [
                    613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 613,
                      "name": "_candidates",
                      "nodeType": "VariableDeclaration",
                      "scope": 649,
                      "src": "249:30:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Candidate_$82_memory_$dyn_memory_ptr",
                        "typeString": "struct Election.Candidate[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 611,
                          "name": "Candidate",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 82,
                          "src": "249:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Candidate_$82_storage_ptr",
                            "typeString": "struct Election.Candidate"
                          }
                        },
                        "id": 612,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "249:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$82_storage_$dyn_storage_ptr",
                          "typeString": "struct Election.Candidate[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 617,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 615,
                        "name": "_constituencyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "310:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 614,
                      "name": "getCandidatesByConstituency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 431,
                      "src": "282:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Candidate_$82_memory_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct Election.Candidate memory[] memory)"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "282:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$82_memory_$dyn_memory_ptr",
                      "typeString": "struct Election.Candidate memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "249:77:5"
                },
                {
                  "assignments": [
                    619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 619,
                      "name": "_votes",
                      "nodeType": "VariableDeclaration",
                      "scope": 649,
                      "src": "336:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 618,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "336:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 620,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "336:13:5"
                },
                {
                  "body": {
                    "id": 645,
                    "nodeType": "Block",
                    "src": "405:89:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 632,
                            "name": "_votes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "419:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 633,
                              "name": "_votes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "428:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 635,
                                    "name": "candidateVoteCount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 124,
                                    "src": "444:18:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 640,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 636,
                                        "name": "_candidates",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 613,
                                        "src": "463:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Candidate_$82_memory_$dyn_memory_ptr",
                                          "typeString": "struct Election.Candidate memory[] memory"
                                        }
                                      },
                                      "id": 638,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 637,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 622,
                                        "src": "475:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "463:14:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Candidate_$82_memory",
                                        "typeString": "struct Election.Candidate memory"
                                      }
                                    },
                                    "id": 639,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "_id",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 81,
                                    "src": "463:18:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "444:38:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "437:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": "uint32"
                              },
                              "id": 641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "437:46:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "428:55:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "419:64:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 644,
                        "nodeType": "ExpressionStatement",
                        "src": "419:64:5"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 625,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 622,
                      "src": "376:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 626,
                        "name": "_candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 613,
                        "src": "380:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$82_memory_$dyn_memory_ptr",
                          "typeString": "struct Election.Candidate memory[] memory"
                        }
                      },
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "380:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "376:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 646,
                  "initializationExpression": {
                    "assignments": [
                      622
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 622,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "364:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "364:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 624,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "373:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "364:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "400:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 629,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "400:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 631,
                    "nodeType": "ExpressionStatement",
                    "src": "400:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "359:135:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 647,
                    "name": "_votes",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 619,
                    "src": "511:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 609,
                  "id": 648,
                  "nodeType": "Return",
                  "src": "504:13:5"
                }
              ]
            },
            "documentation": null,
            "id": 650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retreiveConstituencyVoteCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "name": "_constituencyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "184:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "184:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "183:25:5"
            },
            "returnParameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "231:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "231:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "230:8:5"
            },
            "scope": 651,
            "src": "145:379:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 652,
        "src": "95:431:5"
      }
    ],
    "src": "0:526:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-20T16:17:50.072Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}